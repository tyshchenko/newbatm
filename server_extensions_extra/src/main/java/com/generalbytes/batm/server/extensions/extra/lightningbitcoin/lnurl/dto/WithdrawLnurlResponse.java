package com.generalbytes.batm.server.extensions.extra.lightningbitcoin.lnurl.dto;

public class WithdrawLnurlResponse {

    /**
     * type of LNURL
     */
    private final String tag = "withdrawRequest";

    /**
     * not used by us but mentioned in spec,
     * must be kept included since some wallets or services may expect it,
     */
    private final String k1 = "1";

    /**
     * minimim withdrawable amount in MILLI SATOSHIS.
     * user can choose to generate an invoice with amount between minWithdrawable and maxWithdrawable
     */
    private final long minWithdrawable;

    /**
     * maximum withdrawable amount in MILLI SATOSHIS.
     * user can choose to generate an invoice with amount between minWithdrawable and maxWithdrawable
     */
    private final long maxWithdrawable;

    /**
     * Description displayed to the user in their wallet
     */
    private final String defaultDescription;

    /**
     * URL where the user's wallet will send LN invoice to.
     * The wallet will add either '?' or '&' (depending on whether there is a query string already in the callback),
     * k1=<k1> (the k1 specified in the response above),
     * &pr=<lightning invoice> (the payment request generated by the wallet)
     */
    private final String callback;

    public WithdrawLnurlResponse(long minWithdrawable, long maxWithdrawable, String defaultDescription, String callback) {
        this.minWithdrawable = minWithdrawable;
        this.maxWithdrawable = maxWithdrawable;
        this.defaultDescription = defaultDescription;
        this.callback = callback;
    }

    public String getTag() {
        return tag;
    }

    public String getK1() {
        return k1;
    }

    public long getMinWithdrawable() {
        return minWithdrawable;
    }

    public long getMaxWithdrawable() {
        return maxWithdrawable;
    }

    public String getDefaultDescription() {
        return defaultDescription;
    }

    public String getCallback() {
        return callback;
    }

    @Override
    public String toString() {
        return "WithdrawLnurlResponse{" +
            "tag='" + tag + '\'' +
            ", k1='" + k1 + '\'' +
            ", minWithdrawable=" + minWithdrawable +
            ", maxWithdrawable=" + maxWithdrawable +
            ", defaultDescription='" + defaultDescription + '\'' +
            ", callback='" + callback + '\'' +
            '}';
    }
}
